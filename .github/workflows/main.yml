name: Deploying main Branch

on:
  push:
    branches:
      - main
env:
  # === Change only these values ===
  PROCESS_NAME: "Node-npm"
  PACKAGE_MANAGER: "npm"         # or "yarn"
  NODE_VERSION: "20"
  # === Change only these values ===
jobs:
  deploy:    
    runs-on: [self-hosted,taimoor-vm] 

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          clean: false
      
      - name: Ensure Node.js ${{ env.NODE_VERSION }} and global tools are installed
        run: |
          export NVM_DIR="$HOME/.nvm"
          [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"
      
          if ! nvm ls ${{ env.NODE_VERSION }} >/dev/null 2>&1; then
            echo "Installing Node.js v${{ env.NODE_VERSION }}..."
            nvm install ${{ env.NODE_VERSION }}
          fi
          nvm use ${{ env.NODE_VERSION }}
      
          # Install yarn if missing
          if ! command -v yarn &> /dev/null; then
            echo "Installing yarn..."
            npm install -g yarn
          fi
      
          # Install pm2 if missing
          if ! command -v pm2 &> /dev/null; then
            echo "Installing pm2..."
            npm install -g pm2
          fi
      
      - name: Install dependencies
        run: |
          if [ "${{ env.PACKAGE_MANAGER }}" = "yarn" ]; then
            yarn install --ignore-engines
          else
            npm install --legacy-peer-deps
          fi

      - name: Start or Reload Application with PM2
        run: |
          if pm2 list | grep -q "${{ env.PROCESS_NAME }}"; then
            echo "Reloading PM2 process: ${{ env.PROCESS_NAME }}"
            pm2 reload "${{ env.PROCESS_NAME }}"
          else
            echo "Starting new PM2 process: ${{ env.PROCESS_NAME }}"
            if [ "${{ env.PACKAGE_MANAGER }}" = "yarn" ]; then
              pm2 start "yarn start" --name "${{ env.PROCESS_NAME }}"
            else
              pm2 start "npm start" --name "${{ env.PROCESS_NAME }}"
            fi
          fi
